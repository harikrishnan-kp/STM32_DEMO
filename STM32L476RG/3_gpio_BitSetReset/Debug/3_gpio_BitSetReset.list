
3_gpio_BitSetReset.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000018c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000016c  0800018c  0800018c  0000118c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002f8  08000300  00001300  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002f8  080002f8  00001300  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080002f8  080002f8  00001300  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080002f8  08000300  00001300  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002f8  080002f8  000012f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080002fc  080002fc  000012fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001300  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  00001300  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00001300  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000038b  00000000  00000000  00001330  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000102  00000000  00000000  000016bb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  000017c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000002c  00000000  00000000  00001808  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001c4a5  00000000  00000000  00001834  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000536  00000000  00000000  0001dcd9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0009e9b6  00000000  00000000  0001e20f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000bcbc5  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000058  00000000  00000000  000bcc08  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000006a  00000000  00000000  000bcc60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800018c <__do_global_dtors_aux>:
 800018c:	b510      	push	{r4, lr}
 800018e:	4c05      	ldr	r4, [pc, #20]	@ (80001a4 <__do_global_dtors_aux+0x18>)
 8000190:	7823      	ldrb	r3, [r4, #0]
 8000192:	b933      	cbnz	r3, 80001a2 <__do_global_dtors_aux+0x16>
 8000194:	4b04      	ldr	r3, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x1c>)
 8000196:	b113      	cbz	r3, 800019e <__do_global_dtors_aux+0x12>
 8000198:	4804      	ldr	r0, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x20>)
 800019a:	f3af 8000 	nop.w
 800019e:	2301      	movs	r3, #1
 80001a0:	7023      	strb	r3, [r4, #0]
 80001a2:	bd10      	pop	{r4, pc}
 80001a4:	20000000 	.word	0x20000000
 80001a8:	00000000 	.word	0x00000000
 80001ac:	080002e0 	.word	0x080002e0

080001b0 <frame_dummy>:
 80001b0:	b508      	push	{r3, lr}
 80001b2:	4b03      	ldr	r3, [pc, #12]	@ (80001c0 <frame_dummy+0x10>)
 80001b4:	b11b      	cbz	r3, 80001be <frame_dummy+0xe>
 80001b6:	4903      	ldr	r1, [pc, #12]	@ (80001c4 <frame_dummy+0x14>)
 80001b8:	4803      	ldr	r0, [pc, #12]	@ (80001c8 <frame_dummy+0x18>)
 80001ba:	f3af 8000 	nop.w
 80001be:	bd08      	pop	{r3, pc}
 80001c0:	00000000 	.word	0x00000000
 80001c4:	20000004 	.word	0x20000004
 80001c8:	080002e0 	.word	0x080002e0

080001cc <main>:
// user led toggling using GPIO BSRR(bit set reset register)

#include "stm32l4xx.h"

int main(void)
{
 80001cc:	b480      	push	{r7}
 80001ce:	b083      	sub	sp, #12
 80001d0:	af00      	add	r7, sp, #0
	// enable clock access to GPIO A
	RCC->AHB2ENR |= (1<<0);       // set bit 0 to 1
 80001d2:	4b1b      	ldr	r3, [pc, #108]	@ (8000240 <main+0x74>)
 80001d4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80001d6:	4a1a      	ldr	r2, [pc, #104]	@ (8000240 <main+0x74>)
 80001d8:	f043 0301 	orr.w	r3, r3, #1
 80001dc:	64d3      	str	r3, [r2, #76]	@ 0x4c

	// make PA5 as output pin
	GPIOA->MODER |= (1<<10);       // set bit 10 to 1
 80001de:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 80001e2:	681b      	ldr	r3, [r3, #0]
 80001e4:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 80001e8:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80001ec:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &= ~(1<<11);      // set bit 11 to 0
 80001ee:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 80001f2:	681b      	ldr	r3, [r3, #0]
 80001f4:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 80001f8:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80001fc:	6013      	str	r3, [r2, #0]

	while(1)
	{
		GPIOA->BSRR = (1u<<5);
 80001fe:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8000202:	2220      	movs	r2, #32
 8000204:	619a      	str	r2, [r3, #24]
		for(int i=0;i<10000;i++){}
 8000206:	2300      	movs	r3, #0
 8000208:	607b      	str	r3, [r7, #4]
 800020a:	e002      	b.n	8000212 <main+0x46>
 800020c:	687b      	ldr	r3, [r7, #4]
 800020e:	3301      	adds	r3, #1
 8000210:	607b      	str	r3, [r7, #4]
 8000212:	687b      	ldr	r3, [r7, #4]
 8000214:	f242 720f 	movw	r2, #9999	@ 0x270f
 8000218:	4293      	cmp	r3, r2
 800021a:	ddf7      	ble.n	800020c <main+0x40>

		GPIOA->BSRR =(1u<<21);
 800021c:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8000220:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 8000224:	619a      	str	r2, [r3, #24]
		for(int i=0;i<10000;i++){}
 8000226:	2300      	movs	r3, #0
 8000228:	603b      	str	r3, [r7, #0]
 800022a:	e002      	b.n	8000232 <main+0x66>
 800022c:	683b      	ldr	r3, [r7, #0]
 800022e:	3301      	adds	r3, #1
 8000230:	603b      	str	r3, [r7, #0]
 8000232:	683b      	ldr	r3, [r7, #0]
 8000234:	f242 720f 	movw	r2, #9999	@ 0x270f
 8000238:	4293      	cmp	r3, r2
 800023a:	ddf7      	ble.n	800022c <main+0x60>
		GPIOA->BSRR = (1u<<5);
 800023c:	e7df      	b.n	80001fe <main+0x32>
 800023e:	bf00      	nop
 8000240:	40021000 	.word	0x40021000

08000244 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000244:	480d      	ldr	r0, [pc, #52]	@ (800027c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000246:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000248:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800024c:	480c      	ldr	r0, [pc, #48]	@ (8000280 <LoopForever+0x6>)
  ldr r1, =_edata
 800024e:	490d      	ldr	r1, [pc, #52]	@ (8000284 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000250:	4a0d      	ldr	r2, [pc, #52]	@ (8000288 <LoopForever+0xe>)
  movs r3, #0
 8000252:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000254:	e002      	b.n	800025c <LoopCopyDataInit>

08000256 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000256:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000258:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800025a:	3304      	adds	r3, #4

0800025c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800025c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800025e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000260:	d3f9      	bcc.n	8000256 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000262:	4a0a      	ldr	r2, [pc, #40]	@ (800028c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000264:	4c0a      	ldr	r4, [pc, #40]	@ (8000290 <LoopForever+0x16>)
  movs r3, #0
 8000266:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000268:	e001      	b.n	800026e <LoopFillZerobss>

0800026a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800026a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800026c:	3204      	adds	r2, #4

0800026e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800026e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000270:	d3fb      	bcc.n	800026a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000272:	f000 f811 	bl	8000298 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000276:	f7ff ffa9 	bl	80001cc <main>

0800027a <LoopForever>:

LoopForever:
  b LoopForever
 800027a:	e7fe      	b.n	800027a <LoopForever>
  ldr   r0, =_estack
 800027c:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000280:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000284:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000288:	08000300 	.word	0x08000300
  ldr r2, =_sbss
 800028c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000290:	2000001c 	.word	0x2000001c

08000294 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000294:	e7fe      	b.n	8000294 <ADC1_2_IRQHandler>
	...

08000298 <__libc_init_array>:
 8000298:	b570      	push	{r4, r5, r6, lr}
 800029a:	4d0d      	ldr	r5, [pc, #52]	@ (80002d0 <__libc_init_array+0x38>)
 800029c:	4c0d      	ldr	r4, [pc, #52]	@ (80002d4 <__libc_init_array+0x3c>)
 800029e:	1b64      	subs	r4, r4, r5
 80002a0:	10a4      	asrs	r4, r4, #2
 80002a2:	2600      	movs	r6, #0
 80002a4:	42a6      	cmp	r6, r4
 80002a6:	d109      	bne.n	80002bc <__libc_init_array+0x24>
 80002a8:	4d0b      	ldr	r5, [pc, #44]	@ (80002d8 <__libc_init_array+0x40>)
 80002aa:	4c0c      	ldr	r4, [pc, #48]	@ (80002dc <__libc_init_array+0x44>)
 80002ac:	f000 f818 	bl	80002e0 <_init>
 80002b0:	1b64      	subs	r4, r4, r5
 80002b2:	10a4      	asrs	r4, r4, #2
 80002b4:	2600      	movs	r6, #0
 80002b6:	42a6      	cmp	r6, r4
 80002b8:	d105      	bne.n	80002c6 <__libc_init_array+0x2e>
 80002ba:	bd70      	pop	{r4, r5, r6, pc}
 80002bc:	f855 3b04 	ldr.w	r3, [r5], #4
 80002c0:	4798      	blx	r3
 80002c2:	3601      	adds	r6, #1
 80002c4:	e7ee      	b.n	80002a4 <__libc_init_array+0xc>
 80002c6:	f855 3b04 	ldr.w	r3, [r5], #4
 80002ca:	4798      	blx	r3
 80002cc:	3601      	adds	r6, #1
 80002ce:	e7f2      	b.n	80002b6 <__libc_init_array+0x1e>
 80002d0:	080002f8 	.word	0x080002f8
 80002d4:	080002f8 	.word	0x080002f8
 80002d8:	080002f8 	.word	0x080002f8
 80002dc:	080002fc 	.word	0x080002fc

080002e0 <_init>:
 80002e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002e2:	bf00      	nop
 80002e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002e6:	bc08      	pop	{r3}
 80002e8:	469e      	mov	lr, r3
 80002ea:	4770      	bx	lr

080002ec <_fini>:
 80002ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002ee:	bf00      	nop
 80002f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002f2:	bc08      	pop	{r3}
 80002f4:	469e      	mov	lr, r3
 80002f6:	4770      	bx	lr
